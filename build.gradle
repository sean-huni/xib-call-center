plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.1.1"
    id 'jacoco'
}

group = 'com.xib'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

def springBootAdminVersion = '2.2.1'
def springFoxVer = '3.0.0'
def restAssured = '4.2.1'
def jaxb = '3.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.h2database:h2'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "de.codecentric:spring-boot-admin-starter-client:${springBootAdminVersion}"
    implementation "de.codecentric:spring-boot-admin-starter-server:${springBootAdminVersion}"
    implementation 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

//	Spring Fox Swagger
    implementation "io.springfox:springfox-swagger2:$springFoxVer"
    implementation "io.springfox:springfox-boot-starter:$springFoxVer"
    implementation "io.springfox:springfox-swagger-ui:$springFoxVer"

//    Test
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile "io.rest-assured:rest-assured:$restAssured"
    testCompile "io.rest-assured:json-path:$restAssured"
    testCompile "io.rest-assured:xml-path:$restAssured"
    testCompile "io.rest-assured:rest-assured-common:$restAssured"
    testCompile "com.sun.xml.bind:jaxb-osgi:$jaxb"
}

jacocoTestReport{
    dependsOn test
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [ 'com/xib/assessment/AssessmentApplication.java']
            )
        })
    }
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled true
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

project.tasks["sonarqube"].dependsOn "jacocoTestReport"

sonarqube {
    properties {
        property "sonar.projectKey", "sean-huni_xib-call-center"
        property "sonar.organization", "sean-huni-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", System.getenv('SONAR_LOGIN')
    }
}